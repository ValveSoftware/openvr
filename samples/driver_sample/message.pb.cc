// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace com {
namespace limelight {
namespace protobuf {
class PositionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionInfo> _instance;
} _PositionInfo_default_instance_;
}  // namespace protobuf
}  // namespace limelight
}  // namespace com
static void InitDefaultsPositionInfo_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::limelight::protobuf::_PositionInfo_default_instance_;
    new (ptr) ::com::limelight::protobuf::PositionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::limelight::protobuf::PositionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionInfo_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionInfo_message_2eproto}, {}};

void InitDefaults_message_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PositionInfo_message_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_message_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_message_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, posx_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, posy_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, posz_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, rotx_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, roty_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, rotz_),
  PROTOBUF_FIELD_OFFSET(::com::limelight::protobuf::PositionInfo, rotw_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::limelight::protobuf::PositionInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::limelight::protobuf::_PositionInfo_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_message_2eproto = {
  {}, AddDescriptors_message_2eproto, "message.proto", schemas,
  file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, 1, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};

const char descriptor_table_protodef_message_2eproto[] =
  "\n\rmessage.proto\022\026com.limelight.protobuf\""
  "p\n\014PositionInfo\022\014\n\004posX\030\001 \001(\002\022\014\n\004posY\030\002 "
  "\001(\002\022\014\n\004posZ\030\003 \001(\002\022\014\n\004rotX\030\004 \001(\002\022\014\n\004rotY\030"
  "\005 \001(\002\022\014\n\004rotZ\030\006 \001(\002\022\014\n\004rotW\030\007 \001(\002b\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_message_2eproto = {
  false, InitDefaults_message_2eproto, 
  descriptor_table_protodef_message_2eproto,
  "message.proto", &assign_descriptors_table_message_2eproto, 161,
};

void AddDescriptors_message_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_message_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_2eproto = []() { AddDescriptors_message_2eproto(); return true; }();
namespace com {
namespace limelight {
namespace protobuf {

// ===================================================================

void PositionInfo::InitAsDefaultInstance() {
}
class PositionInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionInfo::kPosXFieldNumber;
const int PositionInfo::kPosYFieldNumber;
const int PositionInfo::kPosZFieldNumber;
const int PositionInfo::kRotXFieldNumber;
const int PositionInfo::kRotYFieldNumber;
const int PositionInfo::kRotZFieldNumber;
const int PositionInfo::kRotWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionInfo::PositionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.limelight.protobuf.PositionInfo)
}
PositionInfo::PositionInfo(const PositionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&posx_, &from.posx_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotw_) -
    reinterpret_cast<char*>(&posx_)) + sizeof(rotw_));
  // @@protoc_insertion_point(copy_constructor:com.limelight.protobuf.PositionInfo)
}

void PositionInfo::SharedCtor() {
  ::memset(&posx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotw_) -
      reinterpret_cast<char*>(&posx_)) + sizeof(rotw_));
}

PositionInfo::~PositionInfo() {
  // @@protoc_insertion_point(destructor:com.limelight.protobuf.PositionInfo)
  SharedDtor();
}

void PositionInfo::SharedDtor() {
}

void PositionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionInfo& PositionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionInfo_message_2eproto.base);
  return *internal_default_instance();
}


void PositionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.limelight.protobuf.PositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&posx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotw_) -
      reinterpret_cast<char*>(&posx_)) + sizeof(rotw_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float posX = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_posx(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float posY = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_posy(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float posZ = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_posz(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float rotX = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_rotx(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float rotY = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_roty(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float rotZ = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_rotz(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float rotW = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 61) goto handle_unusual;
        msg->set_rotw(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.limelight.protobuf.PositionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float posX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float posY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float posZ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotZ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotW = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (61 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.limelight.protobuf.PositionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.limelight.protobuf.PositionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.limelight.protobuf.PositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float posX = 1;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->posx(), output);
  }

  // float posY = 2;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->posy(), output);
  }

  // float posZ = 3;
  if (this->posz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->posz(), output);
  }

  // float rotX = 4;
  if (this->rotx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotx(), output);
  }

  // float rotY = 5;
  if (this->roty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->roty(), output);
  }

  // float rotZ = 6;
  if (this->rotz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->rotz(), output);
  }

  // float rotW = 7;
  if (this->rotw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rotw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.limelight.protobuf.PositionInfo)
}

::google::protobuf::uint8* PositionInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.limelight.protobuf.PositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float posX = 1;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->posx(), target);
  }

  // float posY = 2;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->posy(), target);
  }

  // float posZ = 3;
  if (this->posz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->posz(), target);
  }

  // float rotX = 4;
  if (this->rotx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotx(), target);
  }

  // float rotY = 5;
  if (this->roty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->roty(), target);
  }

  // float rotZ = 6;
  if (this->rotz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->rotz(), target);
  }

  // float rotW = 7;
  if (this->rotw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rotw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.limelight.protobuf.PositionInfo)
  return target;
}

size_t PositionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.limelight.protobuf.PositionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float posX = 1;
  if (this->posx() != 0) {
    total_size += 1 + 4;
  }

  // float posY = 2;
  if (this->posy() != 0) {
    total_size += 1 + 4;
  }

  // float posZ = 3;
  if (this->posz() != 0) {
    total_size += 1 + 4;
  }

  // float rotX = 4;
  if (this->rotx() != 0) {
    total_size += 1 + 4;
  }

  // float rotY = 5;
  if (this->roty() != 0) {
    total_size += 1 + 4;
  }

  // float rotZ = 6;
  if (this->rotz() != 0) {
    total_size += 1 + 4;
  }

  // float rotW = 7;
  if (this->rotw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.limelight.protobuf.PositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PositionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.limelight.protobuf.PositionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.limelight.protobuf.PositionInfo)
    MergeFrom(*source);
  }
}

void PositionInfo::MergeFrom(const PositionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.limelight.protobuf.PositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.posz() != 0) {
    set_posz(from.posz());
  }
  if (from.rotx() != 0) {
    set_rotx(from.rotx());
  }
  if (from.roty() != 0) {
    set_roty(from.roty());
  }
  if (from.rotz() != 0) {
    set_rotz(from.rotz());
  }
  if (from.rotw() != 0) {
    set_rotw(from.rotw());
  }
}

void PositionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.limelight.protobuf.PositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionInfo::CopyFrom(const PositionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.limelight.protobuf.PositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionInfo::IsInitialized() const {
  return true;
}

void PositionInfo::Swap(PositionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionInfo::InternalSwap(PositionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(posx_, other->posx_);
  swap(posy_, other->posy_);
  swap(posz_, other->posz_);
  swap(rotx_, other->rotx_);
  swap(roty_, other->roty_);
  swap(rotz_, other->rotz_);
  swap(rotw_, other->rotw_);
}

::google::protobuf::Metadata PositionInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace limelight
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::limelight::protobuf::PositionInfo* Arena::CreateMaybeMessage< ::com::limelight::protobuf::PositionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::limelight::protobuf::PositionInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
